#!/bin/bash
#
# The script takes a file generated by debuginfo_get_qemu_list.sh script
# as an argument and tries to download appropriate debuginfo packages in
# the current directory.
#
# Usage: debuginfo_download_packages.sh packages.list
#
# Examples of input packages and generated links:
#
# libnl3-3.7.0-1.vl9.x86_64
# http://kojistorage.dev.vzint.dev/packages/libnl3/3.7.0/1.vl9/x86_64/libnl3-debuginfo-3.7.0-1.vl9.x86_64.rpm
#
# glibc-2.34-83.vl9.7.x86_64
# http://kojistorage.dev.vzint.dev/packages/glibc/2.34/83.vl9.7/x86_64/glibc-debuginfo-2.34-83.vl9.7.x86_64.rpm
#

pkglistfile="$1"
link_tmpl="http://kojistorage.dev.vzint.dev/packages"

while read -r srcname name ver rel arch; do
    #echo ".$srcname $name $ver $rel $arch."
    koji_str="$link_tmpl/$srcname/$ver/$rel/$arch/$name-debuginfo-$ver-$rel.$arch.rpm"
    wget --no-clobber -q "$koji_str" ||
	echo "Debuginfo for package \"$name\" is not found"

    # qemu-kvm debugging requires "debugsource" package along with "debuginfo"
    if [ "$name" = "qemu-kvm" ]; then
	koji_str="$link_tmpl/$srcname/$ver/$rel/$arch/$name-debugsource-$ver-$rel.$arch.rpm"
	wget --no-clobber -q "$koji_str" ||
	    echo "DebugSOURCE for package \"$name\" is not found"
    fi

    # debuginfo package for, say, "openssl-libs" package most often depends on
    # debuginfo for "openssl" package.
    # i don't want to resolve proper rpm dependences, following heuristic is
    # enough for now.
    if [ "$name" != "$srcname" ]; then
	koji_str="$link_tmpl/$srcname/$ver/$rel/$arch/$srcname-debuginfo-$ver-$rel.$arch.rpm"
	wget --no-clobber -q "$koji_str" ||
	    echo "Debuginfo for package \"$srcname\" is not found"
    fi

done < "$pkglistfile"
